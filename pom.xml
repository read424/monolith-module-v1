<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.4.5</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.walrex</groupId>
	<artifactId>monolith-module-v1</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>pom</packaging>
	<name>monolith-module-v1</name>
	<description>Monolito Modular con Arquitectura Hexagonal</description>
	<url/>
	<licenses>
		<license/>
	</licenses>
	<developers>
		<developer/>
	</developers>
	<scm>
		<connection/>
		<developerConnection/>
		<tag/>
		<url/>
	</scm>
	<modules>
		<module>module-core</module>
		<module>module-common</module>
		<module>gateway</module>
		<module>module-users</module>
		<module>module-role</module>
		<module>module-mailing</module>
		<module>module-almacen</module>
		<module>module-articulos</module>
	</modules>
	<properties>
		<java.version>21</java.version>
		<spring-modulith.version>1.2.10</spring-modulith.version>
		<maven.compiler.source>${java.version}</maven.compiler.source>
		<maven.compiler.target>${java.version}</maven.compiler.target>
		<r2dbc-postgresql.version>1.0.7.RELEASE</r2dbc-postgresql.version>
		<reactor-kafka.version>1.3.23</reactor-kafka.version>
		<kafka-clients.version>3.9.0</kafka-clients.version>
		<avro.version>7.9.0</avro.version>
		<lombok.version>1.18.36</lombok.version>
		<mapstruct.version>1.5.5.Final</mapstruct.version>
		<resilience4j.version>2.3.0</resilience4j.version>
		<micrometer.version>1.13.5</micrometer.version>
		<logback.version>1.5.8</logback.version>
		<jackson.version>2.18.2</jackson.version>
		<jjwt.version>0.11.5</jjwt.version>
	</properties>
	<repositories>
		<repository>
			<id>central</id>
			<url>https://repo.maven.apache.org/maven2</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>confluent</id>
			<url>https://packages.confluent.io/maven/</url>
		</repository>
	</repositories>
	<dependencyManagement>
		<dependencies>
			<!-- BOM de Spring Boot -->
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-dependencies</artifactId>
				<version>3.4.3</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<!-- BOM de Spring Cloud -->
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>2024.0.1</version> <!-- VersiÃ³n compatible con Spring Boot 3.2 -->
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework.modulith</groupId>
				<artifactId>spring-modulith-bom</artifactId>
				<version>${spring-modulith.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<!--PostgreSQL-->
			<dependency>
				<groupId>org.postgresql</groupId>
				<artifactId>r2dbc-postgresql</artifactId>
				<version>1.0.7.RELEASE</version>
			</dependency>
			<!--Kafka-->
			<dependency>
				<groupId>io.projectreactor.kafka</groupId>
				<artifactId>reactor-kafka</artifactId>
				<version>${reactor-kafka.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.kafka</groupId>
				<artifactId>kafka-clients</artifactId>
				<version>${kafka-clients.version}</version>
			</dependency>
			<!-- Avro -->
			<dependency>
				<groupId>io.confluent</groupId>
				<artifactId>kafka-avro-serializer</artifactId>
				<version>${avro.version}</version>
			</dependency>
			<!-- Utilitarios -->
			<dependency>
				<groupId>org.projectlombok</groupId>
				<artifactId>lombok</artifactId>
				<version>${lombok.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.mapstruct</groupId>
				<artifactId>mapstruct</artifactId>
				<version>${mapstruct.version}</version>
			</dependency>
			<!-- Resiliencia -->
			<!--dependency>
				<groupId>io.github.resilience4j</groupId>
				<artifactId>resilience4j-spring-boot3</artifactId>
				<version>${resilience4j.version}</version>
			</dependency>
			<dependency>
				<groupId>io.github.resilience4j</groupId>
				<artifactId>resilience4j-reactor</artifactId>
				<version>${resilience4j.version}</version>
			</dependency-->
			<!-- Observabilidad -->
			<dependency>
				<groupId>io.micrometer</groupId>
				<artifactId>micrometer-core</artifactId>
				<version>${micrometer.version}</version>
			</dependency>
			<dependency>
				<groupId>io.micrometer</groupId>
				<artifactId>micrometer-registry-prometheus</artifactId>
				<version>${micrometer.version}</version>
			</dependency>
			<dependency>
				<groupId>io.opentelemetry</groupId>
				<artifactId>opentelemetry-sdk-logs</artifactId>
				<version>1.35.0</version>
			</dependency>
			<dependency>
				<groupId>io.micrometer</groupId>
				<artifactId>micrometer-tracing-bridge-otel</artifactId>
				<version>1.4.5</version>
			</dependency>
			<!-- Logging -->
			<dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-classic</artifactId>
				<version>${logback.version}</version>
			</dependency>
			<!-- JSON -->
			<dependency>
				<groupId>com.fasterxml.jackson.datatype</groupId>
				<artifactId>jackson-datatype-jsr310</artifactId>
				<version>${jackson.version}</version>
			</dependency>
			<!-- JWT -->
			<dependency>
				<groupId>io.jsonwebtoken</groupId>
				<artifactId>jjwt-api</artifactId>
				<version>${jjwt.version}</version>
			</dependency>
			<dependency>
				<groupId>io.jsonwebtoken</groupId>
				<artifactId>jjwt-impl</artifactId>
				<version>${jjwt.version}</version>
				<scope>runtime</scope>
			</dependency>
			<dependency>
				<groupId>io.jsonwebtoken</groupId>
				<artifactId>jjwt-jackson</artifactId>
				<version>${jjwt.version}</version>
				<scope>runtime</scope>
			</dependency>
			<!--Testing-->
			<dependency>
				<groupId>org.junit.jupiter</groupId>
				<artifactId>junit-jupiter</artifactId>
				<version>5.12.2</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.assertj</groupId>
				<artifactId>assertj-core</artifactId>
				<version>3.27.3</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-core</artifactId>
				<version>5.17.0</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>io.projectreactor</groupId>
				<artifactId>reactor-test</artifactId>
				<version>3.7.5</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework.security</groupId>
				<artifactId>spring-security-test</artifactId>
				<version>6.4.5</version>
				<scope>test</scope>
			</dependency>
			<!-- Testcontainers Core -->
			<dependency>
				<groupId>org.testcontainers</groupId>
				<artifactId>testcontainers</artifactId>
				<version>1.20.6</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.testcontainers</groupId>
				<artifactId>junit-jupiter</artifactId>
				<version>1.20.6</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework.kafka</groupId>
				<artifactId>spring-kafka-test</artifactId>
				<version>3.3.5</version>
				<scope>test</scope>
			</dependency>
			<!-- Testcontainers para Kafka -->
			<dependency>
				<groupId>org.testcontainers</groupId>
				<artifactId>kafka</artifactId>
				<scope>test</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<dependencies>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
	</dependencies>
	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-maven-plugin</artifactId>
					<configuration>
						<excludes>
							<exclude>
								<groupId>org.projectlombok</groupId>
								<artifactId>lombok</artifactId>
							</exclude>
						</excludes>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<configuration>
						<source>${java.version}</source>
						<target>${java.version}</target>
						<annotationProcessorPaths>
							<path>
								<groupId>org.projectlombok</groupId>
								<artifactId>lombok</artifactId>
							</path>
						</annotationProcessorPaths>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<configuration>
						<skipTests>false</skipTests>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>
</project>

name: Docker CI/CD Pipeline

on:
  push:
    branches: [main]
    tags: ["v*"]

env:
  REGISTRY: docker.io
  IMAGE_NAME: read424/api-monolith-module

jobs:
  # üèóÔ∏è BUILD JOB - Se ejecuta en push a main
  build:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    outputs:
      image-id: ${{ steps.build.outputs.image-id }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            GITHUB_USERNAME=read424
            GITHUB_TOKEN=${{ secrets.AVRO_SCHEMAS_GITHUB_TOKEN }}

  #  PUSH JOB - Se ejecuta solo en tags
  push:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: üîê Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}}
            type=raw,value=latest,enable=${{ startsWith(github.ref, 'refs/tags/v') }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            GITHUB_USERNAME=read424
            GITHUB_TOKEN=${{ secrets.AVRO_SCHEMAS_GITHUB_TOKEN }}
